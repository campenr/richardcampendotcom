#!/bin/bash -

[uwsgi]

# set config magic variables
set-placeholder = app_name=campen_co
set-placeholder = app_owner=campen_co
set-placeholder = app_root=/srv/http/%(app_name)

# configure sockets
socket = /var/uwsgi/%(app_name)/%(app_name).sock
stats = /var/uwsgi/%(app_owner)/stats-%(app_name).sock
chown-socket = %(app_owner):www-data
chmod-socket = 660

# setup python
plugins=python3
pythonpath = %(app_root)
virtualenv = %(app_root)/venv/

# set configuration environment
env = CONFIG_ENV=production

# configure wsgi
chdir = %(app_root)
wsgi-file = run.py
callable = flask_app
logto = /var/log/uwsgi/%(app_name).log

### Adaptive Worker Spawning
## set cheaper algorithm to use, if not set default will be used
#cheaper-algo = spare
## minimum number of workers to keep at all times
#cheaper = 1
## number of workers to spawn at startup
#cheaper-initial = 4
## maximum number of workers that can be spawned
#workers = 4
## how many workers should be spawned at a time
#cheaper-step = 1

vacuum = true
die-on-term = True

# run wsgi application as...
uid = %(app_owner)
gid = www-data

# monitor and reload app on file changes to...
touch-reload = %(app_root)/config/__init__.py

# daemonise celery and celery beat workers
attach-daemon = PYTHONPATH=%(pythonpath) %(virtualenv)bin/celery -A app:celery_app campen_co_celery_worker
attach-daemon = PYTHONPATH=%(pythonpath) %(virtualenv)bin/celery -A app:celery_app campen_co_celery_beat

